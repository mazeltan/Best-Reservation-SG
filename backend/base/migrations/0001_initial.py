# Generated by Django 4.0.2 on 2022-03-01 13:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_item_name', models.CharField(max_length=255)),
                ('menu_item_description', models.TextField()),
                ('menu_item_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('menu_item_image', models.ImageField(upload_to='menu-item-image/')),
                ('menu_item_menu_restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.menu')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant_name', models.CharField(max_length=255)),
                ('restaurant_image', models.ImageField(upload_to='', verbose_name='restaurant-images/')),
                ('restaurant_description', models.TextField()),
                ('restaurant_cuisine', models.CharField(choices=[('WS', 'Western'), ('CH', 'Chinese'), ('JP', 'Japanese'), ('KR', 'Korean'), ('OT', 'Others')], default='OT', max_length=2)),
                ('restaurant_type', models.CharField(choices=[('HC', 'Kopitiam'), ('CF', 'Cafe'), ('BA', 'Bar'), ('HE', 'High End Restaurant'), ('ME', 'Medium End Restaurant'), ('BR', 'Budget Restaurant'), ('FF', 'Fast Food Restaurant'), ('OT', 'Others')], default='OT', max_length=2)),
                ('restaurant_rating', models.DecimalField(decimal_places=2, default=4, max_digits=3)),
                ('num_clicks', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation_created_date_time', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('reservation_date_time', models.DateTimeField()),
                ('reservation_is_completed', models.BooleanField(default=False)),
                ('reservation_pax', models.IntegerField()),
                ('reservation_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reservation_restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_number', models.CharField(max_length=255)),
                ('sms_notification', models.BooleanField(default=True)),
                ('email_notification', models.BooleanField(default=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemInOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_item_qty', models.IntegerField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.order')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.menuitem')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='order_reservation',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='base.reservation'),
        ),
        migrations.AddField(
            model_name='menu',
            name='menu_restaurant',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='base.restaurant'),
        ),
        migrations.CreateModel(
            name='IsPartOf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.reservation')),
                ('reservation_diner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BillDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('before_tax_bill', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, default=1.17, max_digits=10)),
                ('deposit', models.DecimalField(decimal_places=2, default=20, max_digits=10)),
                ('after_tax_bill', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('bill_is_paid', models.BooleanField(default=False)),
                ('bill_reservation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='base.reservation')),
            ],
        ),
    ]

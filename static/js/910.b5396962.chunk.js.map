{"version":3,"file":"static/js/910.b5396962.chunk.js","mappings":"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","sources":["Components/RegistrationPage/Components/RegistrationForm.jsx","Components/RegistrationPage/Redux/actions.js","Components/RegistrationPage/index.jsx","../node_modules/react-bootstrap/esm/Alert.js"],"sourcesContent":["/* eslint-disable no-console */\r\n/* eslint-disable react/no-unescaped-entities */\r\nimport { React, useState, useEffect } from 'react';\r\nimport {\r\n  Form, Button, Row, Col, Alert,\r\n} from 'react-bootstrap';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registration } from '../Redux/actions';\r\n\r\nconst passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/;\r\n\r\nconst INTIALVALUES = {\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  contact: '',\r\n};\r\n\r\nconst SCHEMA = yup.object().shape({\r\n  firstName: yup.string().required('First Name Required'),\r\n  lastName: yup.string().required('Last Name Required'),\r\n  email: yup.string().email().required('Email Required'),\r\n  password: yup\r\n    .string()\r\n    .required('Required')\r\n    .min(8, 'Miniumum 8 Characters')\r\n    .max(24, 'Maximum 24 Characters')\r\n    .matches(\r\n      passwordRegex,\r\n      'Password needs to be at least 8 characters long consisting of alphanumeric characters with symbols',\r\n    ),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required('Required')\r\n    .oneOf(\r\n      [yup.ref('password'), null],\r\n      'Password Must Match',\r\n      'Minimum 8 Characters\\nMaximum 24 Characters',\r\n    ),\r\n  contact: yup\r\n    .string()\r\n    .required('Contact Number Required')\r\n    .matches(/[0-9]{8}/, 'Enter Valid Contact Number')\r\n    .max(8, 'Enter Valid Contact Number'),\r\n});\r\n\r\nfunction RegistrationForm() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userRegistration = useSelector(\r\n    (state) => state.userRegistrationReducer,\r\n  );\r\n  const { success, error, userInfo } = userRegistration;\r\n\r\n  const registrationHandler = (e) => {\r\n    dispatch(\r\n      registration(e.firstName, e.lastName, e.email, e.password, e.contact),\r\n    );\r\n  };\r\n\r\n  // For toggling show/hide password\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePassword = () => {\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate('/');\r\n    }\r\n  }, [userInfo]);\r\n\r\n  return (\r\n    <div className=\"p-5 shadow shadow-100\">\r\n      <h1 className=\"text-center\">We're excited to have you onboard!</h1>\r\n      {success && (\r\n        <Alert variant=\"success\">User Registration Successful!</Alert>\r\n      )}\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n      <Formik\r\n        validationSchema={SCHEMA}\r\n        onSubmit={registrationHandler}\r\n        initialValues={INTIALVALUES}\r\n      >\r\n        {({\r\n          handleSubmit, handleChange, values, touched, errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Row xs={1} md={2}>\r\n              <Col>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>First Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.firstName}\r\n                    isValid={touched.firstName && !errors.firstName}\r\n                    feedback={errors.firstName}\r\n                    placeholder=\"John\"\r\n                  />\r\n                  {errors.firstName && (\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                  )}\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.lastName}\r\n                    isValid={touched.lastName && !errors.lastName}\r\n                    feedback={errors.lastName}\r\n                    placeholder=\"Apple\"\r\n                  />\r\n                  {errors.lastName && (\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                  )}\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row xs={1} md={2}>\r\n              <Col>\r\n                <Form.Group className=\"mb-3\" controlId=\"validationFormik01\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.email}\r\n                    isValid={touched.email && !errors.email}\r\n                    feedback={errors.email}\r\n                    placeholder=\"john.apple@helloworld.com\"\r\n                  />\r\n                  {errors.email && (\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                  )}\r\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group className=\"mb-3\" controlId=\"validationFormik03\">\r\n                  <Form.Label>Contact Number</Form.Label>\r\n                  <Form.Control\r\n                    type=\"tel\"\r\n                    name=\"contact\"\r\n                    value={values.contact}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.contact}\r\n                    isValid={touched.contact && !errors.contact}\r\n                    feedback={errors.contact}\r\n                    placeholder=\"1234 5678\"\r\n                  />\r\n                  {errors.contact && (\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.contact}\r\n                  </Form.Control.Feedback>\r\n                  )}\r\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row xs={1} md={2}>\r\n              <Col>\r\n                <Form.Group className=\"mb-3\" controlId=\"validationFormik03\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type={passwordShown ? 'text' : 'password'}\r\n                    name=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.password}\r\n                    isValid={touched.password && !errors.password}\r\n                    feedback={errors.password}\r\n                    placeholder=\"*********\"\r\n                  />\r\n                  {errors.password && (\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.password}\r\n                  </Form.Control.Feedback>\r\n                  )}\r\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group\r\n                  className=\"mb-3\"\r\n                  controlId=\"formBasicCheckbox\"\r\n                  onClick={togglePassword}\r\n                >\r\n                  <Form.Check type=\"checkbox\" label=\"Show Password\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group className=\"mb-3\" controlId=\"validationFormik04\">\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                  <Form.Control\r\n                    type={passwordShown ? 'text' : 'password'}\r\n                    name=\"confirmPassword\"\r\n                    value={values.confirmPassword}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.confirmPassword}\r\n                    isValid={touched.confirmPassword && !errors.confirmPassword}\r\n                    feedback={errors.confirmPassword}\r\n                    placeholder=\"*********\"\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.confirmPassword}\r\n                  </Form.Control.Feedback>\r\n                  )}\r\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <div className=\"d-grid gap-2\">\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary my-5\"\r\n                text=\"Sign In\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <p>\r\n        Already have an account?\r\n        {' '}\r\n        <Link to=\"/login\">Log in here</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n","/* eslint-disable import/prefer-default-export */\r\nimport axios from 'axios';\r\nimport {\r\n  USER_REGISTRATION_REQUEST,\r\n  USER_REGISTRATION_SUCCESS,\r\n  USER_REGISTRATION_ERROR,\r\n} from './constants';\r\nimport {\r\n  USER_LOGIN_SUCCESS,\r\n} from '../../AuthenticationPage/Redux/constants';\r\n\r\nexport const registration = (firstName, lastName, email, password, contact) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTRATION_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      'http://ec2-18-141-208-218.ap-southeast-1.compute.amazonaws.com:9090/api/users/register/',\r\n      {\r\n        firstName, lastName, email, password, contactNumber: contact,\r\n      },\r\n      config,\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTRATION_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTRATION_ERROR,\r\n      payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport RegistrationForm from './Components/RegistrationForm';\r\n\r\nfunction RegistrationPage() {\r\n  return (\r\n    <Container className=\"p-5\">\r\n      <RegistrationForm />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RegistrationPage;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});"],"names":["INTIALVALUES","firstName","lastName","email","password","confirmPassword","contact","SCHEMA","yup","shape","required","min","max","matches","oneOf","dispatch","useDispatch","navigate","useNavigate","userRegistration","useSelector","state","userRegistrationReducer","success","error","userInfo","useState","passwordShown","setPasswordShown","togglePassword","useEffect","className","Alert","variant","validationSchema","onSubmit","e","type","USER_REGISTRATION_REQUEST","config","headers","axios","contactNumber","data","USER_REGISTRATION_SUCCESS","payload","USER_LOGIN_SUCCESS","localStorage","setItem","JSON","stringify","USER_REGISTRATION_ERROR","response","detail","message","initialValues","handleSubmit","handleChange","values","touched","errors","Form","noValidate","Row","xs","md","Col","name","value","onChange","isInvalid","isValid","feedback","placeholder","controlId","onClick","label","Button","text","Link","to","Container","DivStyledAsH4","divWithClassName","displayName","AlertHeading","createWithBsPrefix","Component","AlertLink","Anchor","defaultProps","show","transition","Fade","closeLabel","React","uncontrolledProps","ref","useUncontrolled","bsPrefix","closeVariant","children","onClose","dismissible","props","prefix","useBootstrapPrefix","handleClose","useEventCallback","Transition","alert","_jsxs","role","undefined","classNames","_jsx","CloseButton","unmountOnExit","in","Object","assign","Heading"],"sourceRoot":""}
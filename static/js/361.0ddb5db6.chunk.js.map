{"version":3,"file":"static/js/361.0ddb5db6.chunk.js","mappings":"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","sources":["Components/PostConfirmationPage/Components/EditLink.jsx","Components/PostConfirmationPage/Redux/actions.js","Components/PostConfirmationPage/Components/PostReservationLink.jsx","Components/PostConfirmationPage/Components/Confirmation.js","Components/PostConfirmationPage/index.js"],"sourcesContent":["/* eslint-disable react/prop-types */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nimport { React, useState } from 'react';\r\nimport {\r\n  Modal, Form, Button,\r\n} from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateReservationPin } from '../Redux/actions';\r\n\r\n// https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard\r\n\r\nfunction EditLinkPopUpModal(props) {\r\n  const {\r\n    reservation, setEditLinkModal, setPasswordChange,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const [pin, setPin] = useState('');\r\n\r\n  const handlePasswordChange = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateReservationPin(reservation.id, pin));\r\n    /* Close Edit Link, refresh page/call Api to get updated pw */\r\n    setEditLinkModal(false);\r\n    setPasswordChange(true);\r\n  };\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Reservation Link\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group classname=\"mb-3\">\r\n            <Form.Label> Reservation Link </Form.Label>\r\n            <Form.Control readOnly defaultValue={reservation.reservation_url} />\r\n          </Form.Group>\r\n          <Form.Group classname=\"mb-3\">\r\n            <Form.Label> Password </Form.Label>\r\n            <Form.Control placeholder=\"Password\" onChange={(e) => setPin(e.target.value)} />\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={handlePasswordChange}>\r\n          Update Password\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditLinkPopUpModal;\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable import/prefer-default-export */\r\nimport axios from 'axios';\r\nimport {\r\n  RESERVATION_PIN_UPDATE_REQUEST,\r\n  RESERVATION_PIN_UPDATE_SUCCESS,\r\n  RESERVATION_PIN_UPDATE_ERROR,\r\n\r\n  RESERVATION_GET_REQUEST,\r\n  RESERVATION_GET_SUCCESS,\r\n  RESERVATION_GET_ERROR,\r\n} from './constants';\r\n\r\n// eslint-disable-next-line max-len\r\nexport const updateReservationPin = (reservationID, reservation_pin) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: RESERVATION_PIN_UPDATE_REQUEST,\r\n    });\r\n\r\n    // to retrieve information from the store\r\n    const {\r\n      userLoginReducer: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `http://ec2-18-141-208-218.ap-southeast-1.compute.amazonaws.com:9090/api/reservation/update-reservation-password/reservation_id=${reservationID}/`,\r\n      {\r\n        reservation_pin,\r\n      },\r\n      config,\r\n    );\r\n\r\n    dispatch({\r\n      type: RESERVATION_PIN_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: RESERVATION_PIN_UPDATE_ERROR,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getConfirmedReservation = (reservationID) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: RESERVATION_GET_REQUEST,\r\n    });\r\n\r\n    // to retrieve information from the store\r\n    const {\r\n      userLoginReducer: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(\r\n      `http://ec2-18-141-208-218.ap-southeast-1.compute.amazonaws.com:9090/api/reservation/get-reservation/reservation_id=${reservationID}/`,\r\n      config,\r\n    );\r\n\r\n    dispatch({\r\n      type: RESERVATION_GET_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: RESERVATION_GET_ERROR,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nimport { React } from 'react';\r\nimport {\r\n  Modal, Form, Button,\r\n} from 'react-bootstrap';\r\n\r\n// https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard\r\n\r\nfunction LinkPopUpModal(props) {\r\n  const { reservation } = props;\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Reservation Link\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group classname=\"mb-3\">\r\n            <Form.Label> Reservation Link </Form.Label>\r\n            <Form.Control readOnly defaultValue={reservation.reservation_url} />\r\n          </Form.Group>\r\n          <Form.Group classname=\"mb-3\">\r\n            <Form.Label> Password </Form.Label>\r\n            <Form.Control readOnly defaultValue={reservation.reservation_pin} />\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={() => {\r\n          navigator.clipboard.writeText(`URL: ${reservation.reservation_url}\\nReservation ID: ${reservation.id}\\nPassword: ${reservation.reservation_pin}\\n${reservation.reservation_owner} is inviting you to join them at ${reservation.Restaurant.restaurant_name} on ${reservation.reservation_date} at ${reservation.reservation_time}`);\r\n        }}\r\n        >\r\n          Copy Link\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default LinkPopUpModal;\r\n","/* eslint-disable no-nested-ternary */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-filename-extension */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport Pdf from 'react-to-pdf';\r\nimport { getConfirmedReservation } from '../Redux/actions';\r\nimport EditLinkPopUpModal from './EditLink';\r\nimport LinkPopUpModal from './PostReservationLink';\r\n\r\nconst ref = React.createRef();\r\n\r\nfunction Confirmation() {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [editLinkModal, setEditLinkModal] = useState(false);\r\n  const [showLink, setShowLink] = useState(false);\r\n  const [linkModal, setLinkModal] = useState(false);\r\n  const [passwordChange, setPasswordChange] = useState(false);\r\n\r\n  const getConfirmReservation = useSelector(\r\n    (state) => state.getConfirmedReservationReducer,\r\n  );\r\n  const {\r\n    loading, error, reservation,\r\n  } = getConfirmReservation;\r\n\r\n  useEffect(() => {\r\n    dispatch(getConfirmedReservation(params.id));\r\n    if (passwordChange === true) {\r\n      setPasswordChange(false);\r\n      // show Reservation Link instead of Edit Reservation Link, after pw change\r\n      setShowLink(true);\r\n    }\r\n  }, [dispatch, passwordChange]);\r\n  return (\r\n    <Container ref={ref} className=\"px-5\">\r\n      <h1> Reservation Confirmation </h1>\r\n      { loading ? (\r\n        <h1>Loading confirmed Reservation...</h1>\r\n      ) : error ? (\r\n        <h1>Error Loading Reservations...</h1>\r\n      ) : (\r\n        <div className=\" pt-5 row\">\r\n          {reservation && (/* Again this is needed */\r\n            <>\r\n              <div className=\"col-6\">\r\n                <h3 className=\"pb-3\"> Your Details </h3>\r\n                <h5>Name</h5>\r\n                <p>{reservation.reservation_owner}</p>\r\n                <h5>Reservation Date</h5>\r\n                <p>\r\n                  {reservation.reservation_date}\r\n                </p>\r\n                <h5>Number of Guests</h5>\r\n                <p>{reservation.reservation_pax}</p>\r\n                <h5>Reservation Time</h5>\r\n                <p>{reservation.reservation_time}</p>\r\n                <Link to=\"/\">\r\n                  <div className=\"d-grid gap-2\">\r\n                    <Button className=\"mt-1\" size=\"md\">\r\n                      Go to home page\r\n                    </Button>\r\n\r\n                  </div>\r\n                </Link>\r\n                <br />\r\n                <Link to={`/preorder/${reservation.pre_order_id}`}>\r\n                  <div className=\"d-grid gap-2\">\r\n                    <Button variant=\"success\" className=\"mb-3\" size=\"md\">I want to order</Button>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n\r\n              <div className=\"col-6\">\r\n                <Pdf targetRef={ref} filename=\"reservation-confirmation.pdf\">\r\n                  {({ toPdf }) => <Button onClick={toPdf}>Generate Pdf</Button>}\r\n                </Pdf>\r\n                {' '}\r\n                { !showLink ? (\r\n                  /* if showLink == false(by default),show editLink, else show CopyLink */\r\n                  <Button onClick={() => setEditLinkModal(true)}>\r\n                    Edit Reservation Link\r\n                  </Button>\r\n                ) : (\r\n                  <Button onClick={() => setLinkModal(true)}>\r\n                    Reservation Link\r\n                  </Button>\r\n                )}\r\n                <EditLinkPopUpModal\r\n                  reservation={reservation}\r\n                  setEditLinkModal={setEditLinkModal}\r\n                  setPasswordChange={setPasswordChange}\r\n                  show={editLinkModal}\r\n                  onHide={() => setEditLinkModal(false)}\r\n                />\r\n                <LinkPopUpModal\r\n                  reservation={reservation}\r\n                  setLinkModal={setLinkModal}\r\n                  show={linkModal}\r\n                  onHide={() => setLinkModal(false)}\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Container>\r\n\r\n  );\r\n}\r\n\r\nexport default Confirmation;\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React from 'react';\r\nimport Confirmation from './Components/Confirmation';\r\n\r\nfunction index() {\r\n  return (\r\n    <Confirmation />\r\n\r\n  );\r\n}\r\n\r\nexport default index;\r\n"],"names":["props","reservation","setEditLinkModal","setPasswordChange","dispatch","useDispatch","useState","pin","setPin","Modal","size","centered","closeButton","id","Form","classname","readOnly","defaultValue","reservation_url","placeholder","onChange","e","target","value","Button","onClick","reservationID","reservation_pin","preventDefault","getState","type","RESERVATION_PIN_UPDATE_REQUEST","userInfo","userLoginReducer","config","headers","Authorization","token","axios","data","RESERVATION_PIN_UPDATE_SUCCESS","payload","RESERVATION_PIN_UPDATE_ERROR","response","detail","message","navigator","clipboard","writeText","reservation_owner","Restaurant","restaurant_name","reservation_date","reservation_time","ref","React","params","useParams","editLinkModal","showLink","setShowLink","linkModal","setLinkModal","passwordChange","getConfirmReservation","useSelector","state","getConfirmedReservationReducer","loading","error","useEffect","RESERVATION_GET_REQUEST","RESERVATION_GET_SUCCESS","RESERVATION_GET_ERROR","Container","className","reservation_pax","Link","to","pre_order_id","variant","targetRef","filename","toPdf","EditLink","show","onHide"],"sourceRoot":""}
{"version":3,"file":"static/js/159.26e85d02.chunk.js","mappings":"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","sources":["Components/AuthenticationPage/Components/LoginForm.jsx","Components/AuthenticationPage/index.jsx","../node_modules/react-bootstrap/esm/Alert.js"],"sourcesContent":["/* eslint-disable react/jsx-filename-extension */\r\nimport { React, useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../Redux/actions';\r\n\r\nconst INTIALVALUES = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nconst SCHEMA = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email('Must be a valid email address')\r\n    .required('Email Required'),\r\n  password: yup.string().required('Password Required'),\r\n});\r\n\r\nfunction LoginForm() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userLogin = useSelector((state) => state.userLoginReducer);\r\n  const { success, error, userInfo } = userLogin;\r\n\r\n  const loginHandler = (e) => {\r\n    dispatch(login(e.email, e.password));\r\n  };\r\n\r\n  // For toggling show/hide password\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePassword = () => {\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate('/');\r\n    }\r\n  }, [userInfo]);\r\n\r\n  return (\r\n    <div className=\"p-5 shadow shadow-100\">\r\n      <h1 className=\"text-center\">Welcome back!</h1>\r\n      {success && <Alert variant=\"success\" className=\"text-center\">Login Successful!</Alert>}\r\n      {error && <Alert variant=\"danger\" className=\"text-center\">{error}</Alert>}\r\n\r\n      <Formik\r\n        validationSchema={SCHEMA}\r\n        onSubmit={loginHandler}\r\n        initialValues={INTIALVALUES}\r\n      >\r\n        {({\r\n          handleSubmit, handleChange, values, touched, errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"validationFormik01\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.email}\r\n                isValid={touched.email && !errors.email}\r\n                feedback={errors.email}\r\n              />\r\n              {errors.email && (\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.email}\r\n              </Form.Control.Feedback>\r\n              )}\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"validationFormik02\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type={passwordShown ? 'text' : 'password'}\r\n                name=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.password}\r\n                isValid={touched.password && !errors.password}\r\n                feedback={errors.password}\r\n              />\r\n              {errors.password && (\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.password}\r\n              </Form.Control.Feedback>\r\n              )}\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group\r\n              className=\"mb-3\"\r\n              controlId=\"formBasicCheckbox\"\r\n              onClick={togglePassword}\r\n            >\r\n              <Form.Check type=\"checkbox\" label=\"Show Password\" />\r\n            </Form.Group>\r\n            <Link to=\"/email_verification\">Forgot password?</Link>\r\n            <div className=\"d-grid gap-2\">\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary my-5\"\r\n                text=\"Sign In\"\r\n              >\r\n                Sign in\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <p>\r\n        Need an account?\r\n        {' '}\r\n        <Link to=\"/registration\">Sign up here</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable react/jsx-filename-extension */\r\n/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport LoginForm from './Components/LoginForm';\r\n\r\nfunction AuthenticationPage() {\r\n  return (\r\n    <Container className=\"p-5\">\r\n      <LoginForm />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AuthenticationPage;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});"],"names":["INTIALVALUES","email","password","SCHEMA","yup","shape","required","dispatch","useDispatch","navigate","useNavigate","userLogin","useSelector","state","userLoginReducer","success","error","userInfo","useState","passwordShown","setPasswordShown","togglePassword","useEffect","className","Alert","variant","validationSchema","onSubmit","e","login","initialValues","handleSubmit","handleChange","values","touched","errors","Form","noValidate","controlId","type","name","value","onChange","isInvalid","isValid","feedback","onClick","label","Link","to","Button","text","Container","DivStyledAsH4","divWithClassName","displayName","AlertHeading","createWithBsPrefix","Component","AlertLink","Anchor","defaultProps","show","transition","Fade","closeLabel","React","uncontrolledProps","ref","useUncontrolled","bsPrefix","closeVariant","children","onClose","dismissible","props","prefix","useBootstrapPrefix","handleClose","useEventCallback","Transition","alert","_jsxs","role","undefined","classNames","_jsx","CloseButton","unmountOnExit","in","Object","assign","Heading"],"sourceRoot":""}
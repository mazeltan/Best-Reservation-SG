{"version":3,"file":"static/js/931.13f3b6ef.chunk.js","mappings":"gMAaMA,EAAe,CACnBC,MAAO,IAGHC,EAASC,EAAAA,KAAaC,MAAM,CAChCH,MAAOE,EAAAA,KAAaF,MAAM,iCAAiCI,SAAS,oBAyDtE,UAtDA,WAGE,OACE,SAAC,IAAD,CAAWC,UAAU,YAArB,UACE,UAAC,IAAD,CAAMA,UAAU,wBAAhB,WACE,eAAIA,UAAU,cAAd,UACE,2DAEF,SAAC,KAAD,CACEC,iBAAkBL,EAClBM,SAVyB,aAWzBC,cAAeT,EAHjB,SAKG,gBACCU,EADD,EACCA,aAAcC,EADf,EACeA,aAAcC,EAD7B,EAC6BA,OAAQC,EADrC,EACqCA,QAASC,EAD9C,EAC8CA,OAD9C,OAGC,UAAC,IAAD,CAAMC,YAAU,EAACP,SAAUE,EAA3B,WACE,UAAC,UAAD,CAAYJ,UAAU,OAAOU,UAAU,qBAAvC,WACE,SAAC,UAAD,6BACA,SAAC,YAAD,CACEC,KAAK,QACLC,KAAK,QACLC,MAAOP,EAAOX,MACdmB,SAAUT,EACVU,YAAaP,EAAOb,MACpBqB,QAAST,EAAQZ,QAAUa,EAAOb,MAClCsB,SAAUT,EAAOb,QAElBa,EAAOb,QACN,SAAC,qBAAD,CAAuBgB,KAAK,UAA5B,SACGH,EAAOb,SAGZ,SAAC,qBAAD,8BAGF,gBAAKK,UAAU,eAAf,UACE,SAAC,IAAD,CACEW,KAAK,SACLX,UAAU,uBACVkB,KAAK,UAHP","sources":["Components/EmailVerificationPage/index.jsx"],"sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable react/jsx-filename-extension */\r\n/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n} from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst INTIALVALUES = {\r\n  email: '',\r\n};\r\n\r\nconst SCHEMA = yup.object().shape({\r\n  email: yup.string().email('Must be a valid email address').required('Email Required'),\r\n});\r\n\r\nfunction EmailVerificationPage() {\r\n  const emailVerificationHandler = () => {};\r\n\r\n  return (\r\n    <Container className=\"py-5 my-5\">\r\n      <Form className=\"p-5 shadow shadow-100\">\r\n        <h1 className=\"text-center\">\r\n          <strong>Don't worry, we gotcha!</strong>\r\n        </h1>\r\n        <Formik\r\n          validationSchema={SCHEMA}\r\n          onSubmit={emailVerificationHandler}\r\n          initialValues={INTIALVALUES}\r\n        >\r\n          {({\r\n            handleSubmit, handleChange, values, touched, errors,\r\n          }) => (\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Group className=\"mb-3\" controlId=\"validationFormik01\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.email}\r\n                  isValid={touched.email && !errors.email}\r\n                  feedback={errors.email}\r\n                />\r\n                {errors.email && (\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                )}\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <div className=\"d-grid gap-2\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary my-5\"\r\n                  text=\"Sign In\"\r\n                >\r\n                  Send\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default EmailVerificationPage;\r\n"],"names":["INTIALVALUES","email","SCHEMA","yup","shape","required","className","validationSchema","onSubmit","initialValues","handleSubmit","handleChange","values","touched","errors","noValidate","controlId","type","name","value","onChange","isInvalid","isValid","feedback","text"],"sourceRoot":""}
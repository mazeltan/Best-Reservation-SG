{"version":3,"file":"static/js/968.a4637db4.chunk.js","mappings":"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","sources":["Components/ReservationConfirmationPage/Components/AuthDetailsForm.js","Components/ReservationConfirmationPage/Components/Authentication.js","Components/ReservationConfirmationPage/Components/PaymentButton.js","Components/ReservationConfirmationPage/Components/ConfirmationDetails.js","Components/ReservationConfirmationPage/Redux/actions.js","Components/ReservationConfirmationPage/Components/AccordionOptions.jsx","Components/ReservationConfirmationPage/index.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-filename-extension */\r\n/* eslint-disable no-console */\r\n/* eslint-disable react/prop-types */\r\nimport { React, useEffect, useState } from 'react';\r\nimport {\r\n  Form, Button, Row, Col,\r\n} from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './app.css';\r\n\r\nconst SCHEMA = yup.object().shape({\r\n  firstName: yup.string().required('First Name Required'),\r\n  lastName: yup.string().required('Last Name Required'),\r\n  email: yup.string().email().required('Email Required'),\r\n  contact: yup\r\n    .string()\r\n    .required('Contact Number Required')\r\n    .matches(/[0-9]{8}/, 'Enter Valid Contact Number')\r\n    .max(8, 'Enter Valid Contact Number'),\r\n});\r\n\r\nfunction AuthDetailsForm(props) {\r\n  const {\r\n    userInfo, setReservationDate, setReservationTime, setNGuest,\r\n  } = props;\r\n\r\n  // const [reservationDate, setReservationDate] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const initialValues = {\r\n    firstName: userInfo.first_name,\r\n    lastName: userInfo.last_name,\r\n    email: userInfo.email,\r\n    contact: userInfo.contact,\r\n  };\r\n  const date = new Date();\r\n  date.setDate(date.getDate() + 2);\r\n\r\n  return (\r\n    <div className=\"p-5 shadow shadow-100 row\">\r\n      <h1 className=\"text-center\">Enter Your Reservation Details</h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-6 col-md-4\">\r\n          <Form>\r\n            <Form.Label>Reservation Date</Form.Label>\r\n            <Form.Group>\r\n              <Form.Control\r\n                required=\"required\"\r\n                type=\"date\"\r\n                onChange={(e) => setReservationDate(e.target.value)}\r\n                min={date.toISOString().split('T')[0]}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </div>\r\n        <div className=\"col-6 col-md-4\">\r\n          <Form>\r\n            <Form.Label>Reservation Time</Form.Label>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"time\"\r\n                min=\"0900\"\r\n                onChange={(e) => setReservationTime(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </div>\r\n\r\n        <div className=\"col-6 col-md-4\">\r\n          <Form.Group>\r\n            <Form.Label>Number of Guests</Form.Label>\r\n            <Form.Select onChange={(e) => setNGuest(e.target.value)}>\r\n              <option>Select Number of Pax</option>\r\n              <option value={1}>1</option>\r\n              <option value={2}>2</option>\r\n              <option value={3}>3</option>\r\n              <option value={4}>4</option>\r\n              <option value={5}>5</option>\r\n              <option value={6}>6</option>\r\n              <option value={7}>7</option>\r\n              <option value={8}>8</option>\r\n              <option value={9}>9</option>\r\n              <option value={10}>10</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n        </div>\r\n      </div>\r\n      <Formik validationSchema={SCHEMA} initialValues={initialValues}>\r\n        {({\r\n          handleChange, values, touched, errors,\r\n        }) => (\r\n          <Form noValidate>\r\n            <Row xs={1} md={2}>\r\n              <Col>\r\n                <Form.Group className=\"mb-3\" controlId=\"validationFormik01\">\r\n                  <Form.Label>First Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.firstName}\r\n                    isValid={touched.firstName && !errors.firstName}\r\n                    feedback={errors.firstName}\r\n                    placeholder={initialValues.firstName}\r\n                    disabled\r\n                  />\r\n                  {errors.firstName && (\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                  )}\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group className=\"mb-3\" controlId=\"validationFormik02\">\r\n                  <Form.Label>Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.lastName}\r\n                    isValid={touched.lastName && !errors.lastName}\r\n                    feedback={errors.lastName}\r\n                    placeholder={initialValues.lastName}\r\n                    disabled\r\n                  />\r\n                  {errors.lastName && (\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                  )}\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row xs={1} md={2}>\r\n              <Col>\r\n                <Form.Group className=\"mb-3\" controlId=\"validationFormik03\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.email}\r\n                    isValid={touched.email && !errors.email}\r\n                    feedback={errors.email}\r\n                    placeholder={initialValues.email}\r\n                    disabled\r\n                  />\r\n                  {errors.email && (\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                  )}\r\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group className=\"mb-3\" controlId=\"validationFormik04\">\r\n                  <Form.Label>Contact Number</Form.Label>\r\n                  <Form.Control\r\n                    type=\"tel\"\r\n                    name=\"contact\"\r\n                    value={values.contact}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.contact}\r\n                    isValid={touched.contact && !errors.contact}\r\n                    feedback={errors.contact}\r\n                    placeholder={initialValues.contact}\r\n                    disabled\r\n                  />\r\n                  {errors.contact && (\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.contact}\r\n                  </Form.Control.Feedback>\r\n                  )}\r\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthDetailsForm;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-filename-extension */\r\nimport { React, useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../AuthenticationPage/Redux/actions';\r\n\r\nconst INTIALVALUES = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nconst SCHEMA = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email('Must be a valid email address')\r\n    .required('Email Required'),\r\n  password: yup.string().required('Password Required'),\r\n});\r\n\r\nfunction Authentication() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  // For toggling show/hide password\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePassword = () => {\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n\r\n  const loginHandler = (e) => {\r\n    dispatch(login(e.email, e.password));\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-5 shadow shadow-100\">\r\n      <h1 className=\"text-center\">User Authentication</h1>\r\n\r\n      <Formik\r\n        validationSchema={SCHEMA}\r\n        initialValues={INTIALVALUES}\r\n        onSubmit={loginHandler}\r\n      >\r\n        {({\r\n          handleSubmit, handleChange, values, touched, errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"validationFormik01\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.email}\r\n                isValid={touched.email && !errors.email}\r\n                feedback={errors.email}\r\n              />\r\n              {errors.email && (\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.email}\r\n              </Form.Control.Feedback>\r\n              )}\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"validationFormik02\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type={passwordShown ? 'text' : 'password'}\r\n                name=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.password}\r\n                isValid={touched.password && !errors.password}\r\n                feedback={errors.password}\r\n              />\r\n              {errors.password && (\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.password}\r\n              </Form.Control.Feedback>\r\n              )}\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group\r\n              className=\"mb-3\"\r\n              controlId=\"formBasicCheckbox\"\r\n              onClick={togglePassword}\r\n            >\r\n              <Form.Check type=\"checkbox\" label=\"Show Password\" />\r\n            </Form.Group>\r\n            <div className=\"d-grid gap-2\">\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary my-5\"\r\n                text=\"Sign In\"\r\n              >\r\n                Sign in\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Authentication;\r\n","/* eslint-disable react/jsx-filename-extension */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Button, Modal, Form } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction PaymentButton(props) {\r\n  const { payment, paid, setPaid } = props;\r\n  const [show, setShow] = useState(false);\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const handleShow = () => setShow(true);\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePayment = (paymentResult) => {\r\n    if (paymentResult.status === 'COMPLETED') {\r\n      setPaid(!paid);\r\n    }\r\n  };\r\n\r\n  // Add PayPal Script\r\n  const addPayPalScript = () => {\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.src = 'https://www.paypal.com/sdk/js?client-id=AblsefRPw4Dp2V1_u2Dd6MY-IYJUe3OvtFXU0o5XDz-IKjsDC1MmHtguz4ExhBYMvlCtwekZLVZhxy8W&currency=USD';\r\n    script.async = true;\r\n    script.onload = () => {\r\n      setSdkReady(true);\r\n    };\r\n    document.body.appendChild(script);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!paid || !sdkReady) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [paid, sdkReady]);\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-end px-5\">\r\n      <PayPalButton\r\n        amount={14.34}\r\n        onSuccess={handlePayment}\r\n        disabled={!paid}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentButton;\r\n","/* eslint-disable max-len */\r\n/* eslint-disable no-console */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/jsx-filename-extension */\r\nimport { React, useEffect, useState } from 'react';\r\nimport {\r\n  Button, OverlayTrigger, Tooltip,\r\n} from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { VscQuestion } from 'react-icons/vsc';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PaymentButton from './PaymentButton';\r\nimport { createReservation } from '../Redux/actions';\r\n\r\nfunction ConfirmationDetails(props) {\r\n  const navigate = useNavigate();\r\n  const {\r\n    userInfo, reservationDate, reservationTime, nGuest, restaurantID,\r\n  } = props;\r\n  const [created, setCreated] = useState(false);\r\n  const [paid, setPaid] = useState(false);\r\n  const createsReservation = useSelector(\r\n    (state) => state.createReservationReducer,\r\n  );\r\n  const {\r\n    reservation,\r\n  } = createsReservation;\r\n\r\n  const reservation_date_time = `${reservationDate} ${reservationTime}`;\r\n  const dispatch = useDispatch();\r\n  const handleCreate = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createReservation(restaurantID, reservation_date_time, nGuest));\r\n    setCreated(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (created && reservation) {\r\n      window.location.href = `/post_confirmation/${reservation.id}`;\r\n    }\r\n  }, [created, reservation]);\r\n\r\n  return (\r\n    <div className=\"p-5 shadow shadow-100 row\">\r\n      <h1 className=\"text-center\">Confirm Reservation</h1>\r\n      <div className=\"pt-5 row\">\r\n        <div className=\"col-sm\">\r\n          <h4>Name</h4>\r\n          <p>{userInfo.first_name}</p>\r\n          <h4>Reservation Date</h4>\r\n          <p>{reservationDate}</p>\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          <h4>Number of Guests</h4>\r\n          <p>{nGuest}</p>\r\n          <h4>Reservation Time</h4>\r\n          <p>{reservationTime}</p>\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          <OverlayTrigger\r\n            overlay={(\r\n              <Tooltip id=\"tooltips\">\r\n                A deposit of 20 SGD is required to secure your reservation.\r\n              </Tooltip>\r\n            )}\r\n          >\r\n            <span className=\"d-inline-block\">\r\n              <div className=\"d-flex justify-content-end px-5\">\r\n                <Button variant=\"link\" disabled style={{ pointerEvents: 'none' }}>\r\n                  Deposit\r\n                  <VscQuestion />\r\n                </Button>\r\n              </div>\r\n            </span>\r\n          </OverlayTrigger>\r\n          <br />\r\n          <PaymentButton\r\n            setPaid={setPaid}\r\n            paid={paid}\r\n          />\r\n        </div>\r\n      </div>\r\n      {(!paid || !reservationDate || !reservationTime || !nGuest) ? (\r\n        <Button onClick={() => { alert('Please ensure all form fields are filled and deposit is paid!'); }}>Confirm Reservation</Button>\r\n      ) : (\r\n        <Button type=\"submit\" className=\"my-3\" onClick={handleCreate}>Confirm Reservation</Button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConfirmationDetails;\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable import/prefer-default-export */\r\nimport axios from 'axios';\r\nimport {\r\n  RESERVATION_CREATION_REQUEST,\r\n  RESERVATION_CREATION_SUCCESS,\r\n  RESERVATION_CREATION_ERROR,\r\n} from './constants';\r\n\r\n// eslint-disable-next-line max-len\r\nexport const createReservation = (restaurant_id, reservation_tyme, reservation_pax) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: RESERVATION_CREATION_REQUEST,\r\n    });\r\n\r\n    // to retrieve information from the store\r\n    const {\r\n      userLoginReducer: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/reservation/create-reservation/',\r\n      {\r\n        restaurant_id, reservation_tyme, reservation_pax,\r\n      },\r\n      config,\r\n    );\r\n\r\n    dispatch({\r\n      type: RESERVATION_CREATION_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: RESERVATION_CREATION_ERROR,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/prop-types */\r\nimport { React, useState } from 'react';\r\nimport { Container, Accordion } from 'react-bootstrap';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport AuthDetailsForm from './AuthDetailsForm';\r\nimport Authentication from './Authentication';\r\nimport ConfirmationDetails from './ConfirmationDetails';\r\n\r\nfunction AccordionOptions() {\r\n  const userLogin = useSelector((state) => state.userLoginReducer);\r\n  const { userInfo } = userLogin;\r\n\r\n  const params = useParams();\r\n\r\n  const [reservationDate, setReservationDate] = useState('');\r\n  const [reservationTime, setReservationTime] = useState('');\r\n  const [nGuest, setNGuest] = useState(0);\r\n\r\n  return (\r\n    <Container className=\"p-3\">\r\n      <div className=\"py-3\">\r\n        <Link to={`/restaurant/${params.id}`}>Back</Link>\r\n      </div>\r\n      <h3>Complete your reservation</h3>\r\n      {!userInfo ? (\r\n        <Accordion defaultActiveKey=\"0\">\r\n          <Accordion.Item eventKey=\"0\">\r\n            <Accordion.Header>Authentication</Accordion.Header>\r\n            <Accordion.Body>\r\n              <Authentication />\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n          <Accordion.Item eventKey=\"1\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                type=\"button\"\r\n                aria-expanded=\"false\"\r\n                disabled\r\n                className=\"accordion-button collapsed\"\r\n              >\r\n                Details\r\n              </button>\r\n            </h2>\r\n          </Accordion.Item>\r\n          <Accordion.Item eventKey=\"2\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                type=\"button\"\r\n                aria-expanded=\"false\"\r\n                disabled\r\n                className=\"accordion-button collapsed\"\r\n              >\r\n                Confirmation\r\n              </button>\r\n            </h2>\r\n          </Accordion.Item>\r\n        </Accordion>\r\n      ) : (\r\n        <Accordion defaultActiveKey=\"1\" alwaysOpen>\r\n          <Accordion.Item eventKey=\"0\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                type=\"button\"\r\n                aria-expanded=\"false\"\r\n                disabled\r\n                className=\"accordion-button collapsed\"\r\n              >\r\n                Authentication\r\n              </button>\r\n            </h2>\r\n          </Accordion.Item>\r\n          <Accordion.Item eventKey=\"1\">\r\n            <Accordion.Header>Details</Accordion.Header>\r\n            <Accordion.Body>\r\n              <AuthDetailsForm\r\n                userInfo={userInfo}\r\n                setReservationDate={setReservationDate}\r\n                setReservationTime={setReservationTime}\r\n                setNGuest={setNGuest}\r\n              />\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n          <Accordion.Item eventKey=\"2\">\r\n            <Accordion.Header>Confirmation</Accordion.Header>\r\n            <Accordion.Body>\r\n              <ConfirmationDetails\r\n                userInfo={userInfo}\r\n                reservationDate={reservationDate}\r\n                reservationTime={reservationTime}\r\n                restaurantID={params.id}\r\n                nGuest={nGuest}\r\n              />\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n        </Accordion>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AccordionOptions;\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React from 'react';\r\nimport AccordionOptions from './Components/AccordionOptions';\r\n\r\nfunction index() {\r\n  return (\r\n    <AccordionOptions />\r\n  );\r\n}\r\n\r\nexport default index;\r\n"],"names":["SCHEMA","yup","shape","firstName","required","lastName","email","contact","matches","max","props","userInfo","setReservationDate","setReservationTime","setNGuest","initialValues","useDispatch","first_name","last_name","date","Date","setDate","getDate","className","Form","type","onChange","e","target","value","min","toISOString","split","validationSchema","handleChange","values","touched","errors","noValidate","Row","xs","md","Col","controlId","name","isInvalid","isValid","feedback","placeholder","disabled","INTIALVALUES","password","dispatch","useNavigate","useState","passwordShown","setPasswordShown","togglePassword","onSubmit","login","handleSubmit","onClick","label","Button","text","payment","paid","setPaid","sdkReady","setSdkReady","useEffect","window","paypal","script","document","createElement","src","async","onload","body","appendChild","addPayPalScript","amount","onSuccess","paymentResult","status","reservationDate","reservationTime","nGuest","restaurantID","created","setCreated","reservation","useSelector","state","createReservationReducer","reservation_date_time","location","href","id","OverlayTrigger","overlay","Tooltip","variant","style","pointerEvents","restaurant_id","reservation_tyme","reservation_pax","preventDefault","getState","RESERVATION_CREATION_REQUEST","userLoginReducer","config","headers","Authorization","token","axios","data","RESERVATION_CREATION_SUCCESS","payload","RESERVATION_CREATION_ERROR","response","detail","message","alert","params","useParams","Container","Link","to","Accordion","defaultActiveKey","alwaysOpen","eventKey"],"sourceRoot":""}